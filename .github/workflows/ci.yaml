# Taken from https://github.com/hashicorp/learn-terraform-github-actions/blob/main/.github/workflows/terraform.yml

name: "Terraform"

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

# Terraform can source secrets from env vars
env:
  AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
  AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
  AWS_DEFAULT_REGION: eu-west-1

jobs:
  run_terraform:
    name: "Run Terraform"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.2.8

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check
        working-directory: ./setup-infra

      - name: Terraform Init
        id: init
        run: terraform init
        working-directory: ./setup-infra

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
        working-directory: ./setup-infra

      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform plan -no-color -input=false
        continue-on-error: true
        working-directory: ./setup-infra

      - uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          working-directory: ./setup-infra
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        working-directory: ./setup-infra
        run: exit 1

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        working-directory: ./setup-infra
        run: terraform apply -auto-approve -input=false

  deploy-chalice-app:
    name: "Deploy Chalice APP"
    needs: ["run_terraform"]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.7'

      - name: Update Pip
        run: pip install -U pip

      - name: Install Requirements
        run: pip install -r ./sum-rows/requirements.txt

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{env.AWS_DEFAULT_REGION}}
          aws-access-key-id: ${{env.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{env.AWS_SECRET_ACCESS_KEY}}

      - name: Deploy Chalice
        run: chalice deploy --stage dev
        working-directory: ./sum-rows

      - name: Show Stuff
        run: ls -lR ./sum-rows/.chalice/

      # We need to auto-add the sum-rows/.chalice/deployed/* back into the source control
      # See https://github.com/aws/chalice/issues/915
      - name: AutoCommit Deployed Resources List
        uses: stefanzweifel/git-auto-commit-action@v2.3.0
        with:
          commit_message: Apply automatic changes
          branch: ${{ github.head_ref }}
          commit_options: '--no-verify --signoff'
          file_pattern: ./sum-rows/.chalice/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
